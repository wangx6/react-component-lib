{"version":3,"sources":["images/logo.png","Space.js","ContextApi.js","Side.js","CompDoc.js","../../src/Buttons/Button/Button.js","../../src/inputs/TextInput/TextInput.js","../../src/Login/Login.js","../../src/Register/Register.js","../../src/VerifyEmail/VerifyEmail.js","../../src/ForgotPassword/ForgotPassword.js","../../src/ResetPassword/ResetPassword.js","App.js","index.js"],"names":["module","exports","Space","className","configContext","createContext","Side","handleClickItem","cc","useContext","onClickItem","name","items","src","logoImage","alt","onClick","e","map","i","key","type","group","CompDoc","props","headers","component","docData","h","data","dd","VhiButton","vtext","vhandleClick","vdisabled","vclassName","vshowSpinner","clsName","useState","showSpinner","setShowSpinner","clickFn","useEffect","vhiBtnStyle","disabled","VhiInput","vplaceholder","vvalue","vhandleChange","vtype","verror","value","error","handleChange","onChange","defaultValue","TextInputStyle","placeholder","VhiLogin","VhiRegister","vhandleRegister","vemail","vpassword","vconfirmPassword","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setError","handleRegister","RegisterStyle","useVerification","authenticationEndpoint","vauthenticationEndpoint","accessToken","vaccessToken","verificationToken","vverificationToken","status","setStatus","Error","Promise","setTimeout","resolve","__verify","VhiVerifyEmail","ForgotPassword","VhiResetPassword","iState","visible","vclsName","alert","a11y","console","log","App","state","setState","Provider","itemName","s","version","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.596a9d07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.843b73f2.png\";","import React from 'react'\r\n\r\nexport default function Space() {\r\n    return (\r\n        <div className=\"vrl-space\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import {createContext} from 'react';\r\n\r\nexport const configContext = createContext({});","import React, {useContext} from 'react'\r\nimport logoImage from './images/logo.png';\r\nimport {configContext} from './ContextApi';\r\n\r\n\r\nexport default function Side({handleClickItem}) {\r\n    const cc = useContext(configContext);\r\n\r\n    const onClickItem = (name) => {\r\n        if(handleClickItem) handleClickItem(name);\r\n    };\r\n    const items = cc;\r\n    return (\r\n        <div className=\"vrl-side-wrap\">\r\n            <div className=\"vrl-side\">\r\n                <div className=\"vrl-side-logo\">\r\n                    <img src={logoImage} alt=\"vhi react component lib logo\"/>\r\n                </div>\r\n                <div className=\"vrl-side-list\">\r\n                    <div className=\"vrl-side-item\">\r\n                        <div className=\"vrl-side-item-name\" onClick={e => onClickItem('all')}>All</div>\r\n                    </div>\r\n                    {items.map(i => <div onClick={e => onClickItem(i.name)} key={i.name} className=\"vrl-side-item\">\r\n                        <div className=\"vrl-side-item-name\">{i.name}</div>\r\n                        <div className={`vrl-side-item-tag ${i.type}`}>{i.group}</div>\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CompDoc(props) {\r\n    const headers = [\r\n        'property',\r\n        'dataType',\r\n        'required',\r\n        'default',\r\n        'description',\r\n    ];\r\n    \r\n    const { name, component, docData } = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"vrl-comp\">\r\n                <div className=\"vrl-comp-header-wrap\">\r\n                    <h2>{name}</h2>\r\n                    <span className=\"vrl-comp-tag\">A11y</span>\r\n                    <span className=\"vrl-comp-tag\">Tested</span>\r\n                    <span className=\"vrl-comp-tag\">+52</span>\r\n                </div>\r\n                <div className=\"vrl-comp-container\">{component}</div>\r\n                <div className=\"vrl-comp-doc\">\r\n                    <div className=\"vrl-comp-doc-blk\">\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>{headers.map((h) => <th key={h}>{h}</th>)}</tr>\r\n                                {docData.data.map((dd, i) => <tr key={i}>{headers.map(h => <td key={h}>{dd[h]}</td>)}</tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport vhiBtnStyle from './button.css';\r\n\r\nconst VhiButton = ({ vtext, vhandleClick, vdisabled, vclassName, vshowSpinner}) => {\r\n    const [clsName] = useState(vclassName || '');\r\n    const [showSpinner, setShowSpinner] = useState(vshowSpinner);\r\n    const clickFn = vhandleClick || (() => {});\r\n\r\n    useEffect(() => {\r\n        setShowSpinner(vshowSpinner);\r\n    }, [vshowSpinner]);\r\n\r\n    return <div className={vhiBtnStyle['vhi-btn-wrap']}>\r\n        <button \r\n        className={`${vhiBtnStyle['vhi-btn']} ${clsName} ${showSpinner ? 'spin' : ''}`} \r\n        disabled={vdisabled} \r\n        onClick={(evt) => {!showSpinner && clickFn(evt)}}>{showSpinner ? '' : vtext}</button>\r\n        {showSpinner ? <div className={vhiBtnStyle['vhi-btn-spinner']}></div> : null}\r\n    </div>\r\n\r\n}\r\nexport default VhiButton;","import React, {useState} from 'react';\r\nimport TextInputStyle from './TextInput.css';\r\n\r\nconst VhiInput = ({ vplaceholder, vvalue, vhandleChange, vtype, verror }) => {\r\n    const [value] = useState(vvalue || '')\r\n    const [error] = useState(verror || '');\r\n    const type = vtype || 'text';\r\n    const handleChange = vhandleChange || (() => {});\r\n\r\n    return <div>\r\n        <input \r\n            type={type}  \r\n            onChange={handleChange}\r\n            defaultValue={value} \r\n            className={`${TextInputStyle['vhi-input']}`} \r\n            placeholder={vplaceholder} \r\n        />\r\n        <div className=\"vhi-input-error\">{error}</div>\r\n    </div> \r\n\r\n}\r\nexport default VhiInput;","import React from 'react'\r\nimport VhiButton from '../Buttons/Button/Button';\r\nimport VhiInput from '../inputs/TextInput/TextInput';\r\n\r\nexport default function VhiLogin() {\r\n    return (\r\n        <div>\r\n            <VhiInput vplaceholder=\"Username of email\" />\r\n            <VhiInput vtype=\"password\" vplaceholder=\"Password\" />\r\n            <VhiButton vtext=\"Sign in\"></VhiButton>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport VhiButton from '../Buttons/Button/Button';\r\nimport VhiInput from '../inputs/TextInput/TextInput';\r\nimport RegisterStyle from './Register.css';\r\n\r\nexport default function VhiRegister({vhandleRegister, vemail, vpassword, vconfirmPassword, verror}) {\r\n    const [email, setEmail] = useState(vemail);\r\n    const [password, setPassword] = useState(vpassword);\r\n    const [confirmPassword, setConfirmPassword] = useState(vconfirmPassword);\r\n    const [error, setError] = useState(verror || {});\r\n    const handleRegister = vhandleRegister || (() => {});\r\n\r\n    useEffect(() => {\r\n        setError(verror || {\r\n            email: 'Please enter the correct email',\r\n            password: 'Please enter the correct password',\r\n            confirmPassword: 'Password not matching'\r\n        });\r\n    }, [verror]);\r\n\r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const onPasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const onConfirmPasswordChange = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={RegisterStyle['vhi-register']}>\r\n            <VhiInput vvalue={email} vplaceholder=\"Email\" vhandleChange={onEmailChange}/>\r\n            <div className={RegisterStyle['vhi-register-err']}>{error.email}</div>\r\n            <VhiInput vvalue={password} vplaceholder=\"Password\" vhandleChange={onPasswordChange}/>\r\n            <div className={RegisterStyle['vhi-register-err']}>{error.password}</div>\r\n            <VhiInput vvalue={confirmPassword} vplaceholder=\"Confirm password\" vhandleChange={onConfirmPasswordChange}/>\r\n            <div className={RegisterStyle['vhi-register-err']}>{error.confirmPassword}</div>\r\n            <VhiButton vclassName={RegisterStyle['vhi-register-subbtn']} vtext=\"Create a new account\" vhandleClick={() => {handleRegister({email, password, confirmPassword})}}></VhiButton>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nfunction useVerification({ \r\n    vauthenticationEndpoint: authenticationEndpoint, \r\n    vaccessToken: accessToken, \r\n    vverificationToken: verificationToken }) {\r\n\r\n    /**\r\n     * This space is the data or as react would like to call it , a \"state\".\r\n     * useState is only used if you expect the data to change\r\n     * if the data is static a const value is sufficient\r\n     */\r\n    const [status, setStatus] = useState(-1);\r\n\r\n    // this is the space of \"power\"\r\n    // this space is responsible of processing or modifying the state/data\r\n    // this functions can be private or public\r\n    // __verifyInput is a private function used for internal input verification\r\n    // at the constructor stage\r\n    function __verifyInput() {\r\n        return authenticationEndpoint && accessToken && verificationToken;\r\n    }\r\n\r\n    /**\r\n     * Verify if the token contained by the url is existing and non-expired\r\n     * \r\n     * return -1, 0, 1\r\n     * -1 - not verified yet\r\n     * 0  - verification failed\r\n     * 1  - verification successful\r\n     */\r\n\r\n    async function __verify() {\r\n        const rs = await new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve(1);\r\n            }, 1000);\r\n        })\r\n        return rs;\r\n    }\r\n\r\n\r\n    // With empty array passed, useEffect behaves as an \"componentDidMount\" \r\n    // function.\r\n    useEffect(() => {\r\n        if(!__verifyInput()) throw new Error('Missing config input')\r\n        __verify().then(setStatus);\r\n    }, []);\r\n\r\n    // Anything returned here are the public api exposed\r\n    return {\r\n        status\r\n    };\r\n}\r\n\r\n// This is component\r\n// The component has Model, View and the Controller\r\nexport default function VhiVerifyEmail({ vauthenticationEndpoint, vaccessToken, vverificationToken }) {\r\n    // This space is the Model\r\n    const {status} = useVerification({ vauthenticationEndpoint, vaccessToken, vverificationToken });\r\n\r\n\r\n    // This space is the Controller\r\n    const onSuccessful = () => {\r\n        console.log('redirect');\r\n    };\r\n\r\n    const onFail = () => {\r\n        console.log('failed');\r\n    }\r\n\r\n    const onInVerifyingProcess= () => {\r\n        console.log('Verifying in progress');\r\n    }\r\n\r\n\r\n    // This space is the View\r\n    return (\r\n        <div className=\"vrl-verify-email\">\r\n            {status === -1 ? '' : status === 0 ? <div>Verification failed</div> : <div>Verification successful</div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport VhiInput from '../inputs/TextInput/TextInput';\r\nimport VhiButton from '../Buttons/Button/Button';\r\n\r\nexport default function ForgotPassword() {\r\n    return (\r\n        <div>\r\n            <VhiInput vplaceholder=\"Enter your email please\"></VhiInput>\r\n            <VhiButton vtext=\"Send\"></VhiButton>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport VhiInput from '../inputs/TextInput/TextInput';\r\n\r\nexport default function VhiResetPassword() {\r\n    return (\r\n        <div>\r\n            <VhiInput vplaceholder=\"Enter your old password\"></VhiInput>\r\n            <VhiInput vplaceholder=\"Enter a new password\"></VhiInput>\r\n            <VhiInput vplaceholder=\"Confirm your new password\"></VhiInput>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\n\nimport Space from './Space';\nimport Side from './Side';\nimport { version } from '../package.json';\n\nimport {configContext} from './ContextApi';\nimport CompDoc from './CompDoc';\nimport 'vhi-react-lib/dist/index.css'\n\nimport { \n    VhiButton, \n    VhiInput, \n    VhiLogin, \n    VhiRegister,\n    VhiVerifyEmail,\n    VhiForgotPassword,\n    VhiResetPassword,\n} from 'vhi-react-lib'\n\n\n\nconst iState = [\n    { \n        group: 'buttons',\n        type: 'button',\n        name: 'VhiButton', \n        visible: true,\n        component: <div>\n        <VhiButton \n            vtext=\"Vhi Button\" \n            vclsName='customized-cls'\n            vhandleClick={e => alert('Welcome to Vhi RCL')}\n            vdisabled={false}\n        ></VhiButton>\n\n        <Space></Space>\n\n        <VhiButton \n            vtext=\"Vhi Button With Spinner\" \n            vclsName='customized-cls'\n            vshowSpinner={true}\n            vhandleClick={e => alert('when loading, click will not work')}\n            vdisabled={false}\n        ></VhiButton>\n\n        <Space></Space>\n\n        <VhiButton \n            vtext=\"Vhi Button\" \n            vclsName='customized-cls'\n            vdisabled={true}\n        ></VhiButton>\n        </div>,\n        docData: {\n            a11y: 'Yes',\n            data: [\n                {\n                    'property': 'vtext',\n                    'dataType': 'string',\n                    'required': 'true',\n                    'default': '\"\"',\n                    'description': 'Text displayed on the button.',\n                },\n                {\n                    'property': 'vtestId',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'test-id used for QA to reference dom element.',\n                },\n                {\n                    'property': 'vstatus',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': 'active',\n                    'description': 'Text displayed on the button. options: \"active\", \"inactive\"',\n                },\n                {\n                    'property': 'vhandleClick',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Handling the click event.',\n                }\n            ]\n        }\n    },\n    { \n        group: 'form inputs', \n        type: 'input',\n        name: 'VhiTextInput', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vplaceholder',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Placeholder displayed.',\n                },\n                {\n                    'property': 'vvalue',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Text displayed.',\n                },\n                {\n                    'property': 'vtype',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Type of the input.',\n                },\n                {\n                    'property': 'vhandleChange',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Handling the click event.',\n                }\n            ]\n        },\n        component: <VhiInput \n            vplaceholder=\"Vhi Text Input\"\n            vhandleChange={()=>{console.log('Change detected');}}\n        ></VhiInput>\n    },\n    { \n        group: 'form input', \n        type: 'input',\n        name: 'VhiCheckbox', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vplaceholder',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Placeholder displayed.',\n                },\n                {\n                    'property': 'vvalue',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Text displayed.',\n                },\n            ]\n        },\n        component: <VhiInput \n            vplaceholder=\"Vhi Text Input\"\n            vhandleChange={()=>{console.log('Change detected');}}\n        ></VhiInput>\n    },\n    { \n        group: 'form input', \n        type: 'input',\n        name: 'VhiDropdown', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vplaceholder',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Placeholder displayed.',\n                },\n                {\n                    'property': 'vvalue',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Text displayed.',\n                },\n            ]\n        },\n        component: <VhiInput \n            vplaceholder=\"Vhi Text Input\"\n            vhandleChange={()=>{console.log('Change detected');}}\n        ></VhiInput>\n    },\n    { \n        group: 'form input', \n        type: 'input',\n        name: 'VhiDatePicker', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vplaceholder',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Placeholder displayed.',\n                },\n                {\n                    'property': 'vvalue',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Text displayed.',\n                },\n            ]\n        },\n        component: <VhiInput \n            vplaceholder=\"Vhi Text Input\"\n            vhandleChange={()=>{console.log('Change detected');}}\n        ></VhiInput>\n    },\n    { \n        group: 'form input', \n        type: 'input',\n        name: 'VhiRange', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vplaceholder',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Placeholder displayed.',\n                },\n                {\n                    'property': 'vvalue',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Text displayed.',\n                },\n            ]\n        },\n        component: <VhiInput \n            vplaceholder=\"Vhi Text Input\"\n            vhandleChange={()=>{console.log('Change detected');}}\n        ></VhiInput>\n    },\n    { \n        group: 'form input', \n        type: 'input',\n        name: 'VhiToggler', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vplaceholder',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Placeholder displayed.',\n                },\n                {\n                    'property': 'vvalue',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Text displayed.',\n                },\n            ]\n        },\n        component: <VhiInput \n            vplaceholder=\"Vhi Text Input\"\n            vhandleChange={()=>{console.log('Change detected');}}\n        ></VhiInput>\n    },\n    { \n        group: 'micro frontend', \n        type: 'mf',\n        name: 'VhiLogin', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vplaceholder',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Text displayed on the button.',\n                },\n                {\n                    'property': 'vhandleClick',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Handling the click event.',\n                }\n            ]\n        },\n        component: <VhiLogin></VhiLogin>\n    },\n    { \n        group: 'micro frontend', \n        type: 'mf',\n        name: 'VhiRegister', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vplaceholder',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Text displayed on the button.',\n                },\n                {\n                    'property': 'vhandleClick',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Handling the click event.',\n                }\n            ]\n        },\n        component: <VhiRegister \n        vemail=\"someone@vhi.ie\" \n        vpassword=\"xxxxxxxx\"\n        vconfirmPassword=\"cxxxxxx\"\n        vhandleRegister={(data) => console.log(data)}>\n        </VhiRegister>,\n    },\n    { \n        group: 'micro frontend', \n        type: 'mf',\n        name: 'VhiForgotPassword', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vplaceholder',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Text displayed on the button.',\n                },\n                {\n                    'property': 'vhandleClick',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Handling the click event.',\n                }\n            ]\n        },\n        component: <VhiForgotPassword></VhiForgotPassword>,\n    },\n    { \n        group: 'micro frontend',\n        type: 'mf',\n        name: 'VhiResetPassword', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vplaceholder',\n                    'dataType': 'string',\n                    'required': 'false',\n                    'default': '\"\"',\n                    'description': 'Text displayed on the button.',\n                },\n                {\n                    'property': 'vhandleClick',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Handling the click event.',\n                }\n            ]\n        },\n        component: <VhiResetPassword></VhiResetPassword>,\n    },\n    { \n        group: 'micro frontend',\n        type: 'mf',\n        name: 'VhiVerifyEmail', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vaccessToken',\n                    'dataType': 'string',\n                    'required': 'true',\n                    'default': '\"\"',\n                    'description': 'required for authorization.',\n                },\n                {\n                    'property': 'vverificationToken',\n                    'dataType': 'string',\n                    'required': 'true',\n                    'default': '',\n                    'description': 'required for authentication.',\n                },\n                {\n                    'property': 'vauthenticationEndpoint',\n                    'dataType': 'string',\n                    'required': 'true',\n                    'default': '',\n                    'description': 'authentication endpoint.',\n                },\n                {\n                    'property': 'vonFailed',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Action taken when verification failed.',\n                },\n                {\n                    'property': 'vonSuccessful',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Action taken when verification succeed.',\n                },\n                {\n                    'property': 'vonInProgress',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Action taken when verification is in progress.',\n                },\n            ]\n        },\n        component: <VhiVerifyEmail \n            vauthenticationEndpoint=\"authentication endpoint\" \n            vaccessToken=\"access token\" \n            vverificationToken=\"verification token\" >\n        </VhiVerifyEmail>,\n    },\n    { \n        group: 'micro frontend',\n        type: 'mf',\n        name: 'VhiBilling', \n        visible: true,\n        docData: {\n            a11y: 'yes',\n            data: [\n                {\n                    'property': 'vaccessToken',\n                    'dataType': 'string',\n                    'required': 'true',\n                    'default': '\"\"',\n                    'description': 'required for authorization.',\n                },\n                {\n                    'property': 'vverificationToken',\n                    'dataType': 'string',\n                    'required': 'true',\n                    'default': '',\n                    'description': 'required for authentication.',\n                },\n                {\n                    'property': 'vauthenticationEndpoint',\n                    'dataType': 'string',\n                    'required': 'true',\n                    'default': '',\n                    'description': 'authentication endpoint.',\n                },\n                {\n                    'property': 'vonFailed',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Action taken when verification failed.',\n                },\n                {\n                    'property': 'vonSuccessful',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Action taken when verification succeed.',\n                },\n                {\n                    'property': 'vonInProgress',\n                    'dataType': 'function',\n                    'required': 'false',\n                    'default': 'null',\n                    'description': 'Action taken when verification is in progress.',\n                },\n            ]\n        },\n        component: <VhiVerifyEmail \n            vauthenticationEndpoint=\"authentication endpoint\" \n            vaccessToken=\"access token\" \n            vverificationToken=\"verification token\" >\n        </VhiVerifyEmail>,\n    },\n    { \n        group: 'micro frontend',\n        type: 'mf',\n        name: 'VhiFacilityFinder', \n        visible: true,\n        docData: {\n        a11y: 'yes',\n        data: [\n            {\n                'property': 'vaccessToken',\n                'dataType': 'string',\n                'required': 'true',\n                'default': '\"\"',\n                'description': 'required for authorization.',\n            },\n            {\n                'property': 'vverificationToken',\n                'dataType': 'string',\n                'required': 'true',\n                'default': '',\n                'description': 'required for authentication.',\n            },\n            {\n                'property': 'vauthenticationEndpoint',\n                'dataType': 'string',\n                'required': 'true',\n                'default': '',\n                'description': 'authentication endpoint.',\n            },\n            {\n                'property': 'vonFailed',\n                'dataType': 'function',\n                'required': 'false',\n                'default': 'null',\n                'description': 'Action taken when verification failed.',\n            },\n            {\n                'property': 'vonSuccessful',\n                'dataType': 'function',\n                'required': 'false',\n                'default': 'null',\n                'description': 'Action taken when verification succeed.',\n            },\n            {\n                'property': 'vonInProgress',\n                'dataType': 'function',\n                'required': 'false',\n                'default': 'null',\n                'description': 'Action taken when verification is in progress.',\n            }\n        ]\n        },\n        component: <VhiVerifyEmail \n            vauthenticationEndpoint=\"authentication endpoint\" \n            vaccessToken=\"access token\" \n            vverificationToken=\"verification token\" >\n        </VhiVerifyEmail>,\n    },\n];\n\nconst App = () => {\n    const [state, setState] = useState(iState);\n\n    const onclicksideitem = (itemName) => {\n        setState(state.map(s => {\n            s.visible = itemName === 'all' ? true : s.name === itemName;\n            return s; \n        }));\n    }\n\n  return (\n    <div className=\"vrl-main\">\n        <configContext.Provider value={state}>\n            <Side handleClickItem={onclicksideitem}></Side>\n        </configContext.Provider>\n        <div className=\"vrl-main-right\">\n            <div className=\"vrl-main-heading\">\n                <h1>Vhi React Component Library</h1> <span className=\"vrl-main-version\">{version}</span>\n            </div>\n            {state.map(s => {\n                return s.visible ? <CompDoc \n                key={s.name}\n                name={s.name}\n                docData={s.docData}\n                component={s.component}>\n                </CompDoc> : null;\n            })}\n\n        </div>\n    </div>\n    )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}